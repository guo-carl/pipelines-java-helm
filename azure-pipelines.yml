# Maven master
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

#pool:
#  vmImage: ubuntu-latest

variables:
  # Container registry service connection established during pipeline creation // 'dvue2-acr-evue2dsoacr-sc'
  dockerRegistryServiceConnection:  'dvue-acr-evuedsoacr-sc'
  azureResourceGroupForACR:  'dvue-acr-rg'
  # e.g.  nginx
  imageRepository: 'ava/guoyang/test/test-tomcat'
  containerRegistry: 'evuedsoacr.azurecr.io'
  acrName: 'evuedsoacr'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  k8sServiceConnection: 'k8s_connection_dvueappaks2'
  k8sNamespace: 'pipeline-dev'
  k8sImagePullSecrets: 'pipeline-deploy'
  tag: '$(Build.BuildId)'


steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: HelmInstaller@1
  displayName: Helm 3.7.2 installer
  inputs:
    helmVersionToInstall: 3.7.2

- task: HelmDeploy@0
  displayName: Helm package
  inputs:
    command: package
    #chartPath: Application/charts/mynginx2
    chartPath: ./charts/mynginx2
    destination: $(Build.ArtifactStagingDirectory)

- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: $(dockerRegistryServiceConnection)

- script: pwd
  displayName: list current folder
#- script: dir
#  workingDirectory: $(Agent.BuildDirectory)
#  displayName: List contents of a folder
  #    echo 1
  #    az acr login --name $ACR_NAME
- script: |
    echo 0
    az acr login --name $ACR_NAME --expose-token --output tsv --query accessToken
    echo 1
    echo $ACR_NAME
    echo $USER_NAME
    echo 2
    echo $PASSWORD
    echo 3
    helm registry login $ACR_NAME.azurecr.io  --username $USER_NAME  --password $PASSWORD
    echo 4
  displayName: helm login
  env:
    ACR_NAME: $(acrName)
    USER_NAME: "00000000-0000-0000-0000-000000000000"
    PASSWORD: "123"

- task: HelmDeploy@0
  displayName: Helm save
  inputs:
    command: push
#    chartNameForACR: $(containerRegistry)/test/mynginx2:0.1.3
    chartNameForACR: test/mynginx2:0.1.3
    #chartPathForACR: Application/charts/sampleapp
    chartPathForACR: ./charts/mynginx2
#    azureSubscriptionEndpointForACR: $(k8sServiceConnection)
#    azureResourceGroupForACR: $(azureResourceGroupForACR)
    azureContainerRegistry: $(containerRegistry)
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: $(k8sServiceConnection)
    arguments: $(Build.ArtifactStagingDirectory)/mynginx2-0.1.3.tgz oci://$(containerRegistry)/helm/test
  env:
    HELM_EXPERIMENTAL_OCI: 1


- task: Docker@2
  displayName: Logout of ACR
  inputs:
    command: logout
    containerRegistry: $(dockerRegistryServiceConnection)

